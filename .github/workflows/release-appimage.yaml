name: Release AppImage

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-appimage:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: git cmake # do not include liblz4-dev libzstd-dev
          version: 2.0

      - name: Configure
        run: cmake cloudini_lib -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_TESTING=OFF -DCLOUDINI_BUILD_BENCHMARKS=OFF

      - name: Build
        run: make -j$(nproc) install DESTDIR=AppDir

      - name: Download linuxdeploy
        run: |
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=latest" >> $GITHUB_OUTPUT
          fi

      - name: Create AppImage
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --executable AppDir/usr/bin/cloudini_rosbag_converter -d cloudini_lib/tools/cloudini_converter.desktop -i cloudini.png --output appimage

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push'  # Only create release for tag pushes
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            cloudini_rosbag_converter-*.AppImage
          draft: false
          prerelease: false

      - name: Upload Artifacts
        if: github.event_name == 'workflow_dispatch'  # Only upload artifacts for manual runs
        uses: actions/upload-artifact@v4
        with:
          name: AppImage-manual-build
          path: cloudini_rosbag_converter-*.AppImage
